// console.log(5+20)

//---------Assignment operators----------//
//an assignment operator assigns a value to its left operand
//based on the value of its right operand.
//the simple assignment operator is equal(=)
var x= 5;
var y = 5;
// console.log("is both the x and y are equal or not"  + x ==y);
console.log(x==y);
//i will tell you when we will see es6
// console.log('is both the x and y are equal : ${x== y}');


// --------arithmetic operators---------//
// an arithmetic operator takes numerical values
// (either literals or variables) as their operandsand
// returns a single numerical values.


// console.log(3+3);
// console.log(10-5);
// console.log(20/5);
// console.log(5*6);

// console.log("remainder operator"  + 81%8);



//increment and decrement operator
//operator: x++  or  ++x or x-- or--x
// if used postfix, with operator after operand (for ex, x++),
// the increment operator increments and returns the value before incrementing.


// if used prefix, with operator before operand (for ex, ++x),
// the increment operator increments and returns the value after incrementing
var num = 15;
var newnum = num++;
console.log(num);
console.log(num++);











//-------------comparison operator-----------//
//a comparison operator compares its operands and
// returns a logical value based on whether the comparison is true

//var a= 30;
//var b = 10;
// // equal(==)
// console.log( a==  b);

// // not equal (=/=)
//console.log(a=/=);

// // greater (than >)
// console.log(a> b);

// // greater than or equal (>)
// console.log(a>b);

// // less than (<)
// console.log(a<b);

// // less than equal  (<)
// console.log(a<b);

//--------------logical operator----------------//
//logical operator are typically used with boolean ( logical) values;
//when they are, they return a boolean value.

// var a = 30;
//var b = -20;
  
//logical and (&&)
//the logical and (&&) operator (logical conjunction) for a set of
// operands is true if and only if all of its operands are true.


//logical or ( || )
// the logical or (||)  operator (logical disjunction) for a set of
// operands is true if and only  if one or more of its operands is true.


// logical not(!)
//the logical not (!) operator (logical complement, negation)
//takes truth to falsity and vice versa.


